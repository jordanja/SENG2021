<!DOCTYPE html>
<html lang="en">

<head>
    {{> header }}
    <link rel="stylesheet" href="/css/unslider.css" />
    <link rel="stylesheet" href="/css/unslider-dots.css" />

   <script src="http://cdnjs.cloudflare.com/ajax/libs/underscore.js/1.8.3/underscore-min.js">
    </script>

    <style>
    <!-- more dirty css -->
        #floating-panel {
            position: absolute;
            top: 10px;
            left: 25%;
            z-index: 5;
            background-color: #fff;
            padding: 5px;
            border: 1px solid #999;
            text-align: center;
            font-family: 'Roboto','sans-serif';
            line-height: 30px;
            padding-left: 10px;
        }
    </style>
</head>

<body>
    {{> navbar }}

    <div id="fb-root"></div>
    <script>
        (function(d, s, id) {
        var js, fjs = d.getElementsByTagName(s)[0];
        if (d.getElementById(id)) return;
        js = d.createElement(s); js.id = id;
        js.src = "//connect.facebook.net/en_US/sdk.js#xfbml=1&version=v2.8";
        fjs.parentNode.insertBefore(js, fjs);
        }(document, 'script', 'facebook-jssdk'));
    </script>

    <div class="jumbotron" id="info-main">
        <div id="info-bg" style="background-image: url('{{ header_image }}');"></div>
    </div>
    <!-- weather table for 5 days(average weather and temperature) -->
    <table class="table-condensed">
        <thead>
            <tr>
                <th></th>
                {{#place_5day_weather}}
                <th>{{ time }}</th>
                {{/place_5day_weather}}
            </tr>
        </thead>
        <tbody>
            <tr>
                <th scope="row">Weather:</th>
                {{#place_5day_weather}}
                <td><img id="weatherIcon" src="http://openweathermap.org/img/w/{{ icon }}.png"></td>
                {{/place_5day_weather}}
            </tr>
        </tbody>
        <tbody>
            <tr>
                <th scope="row">Temperature:</th>
                {{#place_5day_weather}}
                <td>{{ temp }}°C</td>
                {{/place_5day_weather}}
            </tr>
        </tbody>
    </table>

    <div class="container" id="campsite-body">
        <div>
            <span><h1 id="info-header">{{ place.name }}</h1></span>
            <!--share buttons for facebook and twitter-->
            <div id="pageURL" class="fb-share-button" data-href="#" data-layout="button" data-size="large" data-mobile-iframe="true">
            <a id="fbshareURL" class="fb-xfbml-parse-ignore" target="_blank" href="#">Share</a></div>
            <!-- probably need to fix the size of the buttons-->
            <div><a href="https://twitter.com/share" class="twitter-share-button" data-size="large"
                data-show-count="false">Tweet</a><script async src="//platform.twitter.com/widgets.js" charset="utf-8"></script></div>
            <div id="ratingText">
                <b>Rating: </b>
            <span class="rating stars-container stars-{{ place.rating }}">★★★★★</span>
            </div>
        </div>
        <br>
        <br>

        <br />
        <div class="slider">
            <ul>{{#place_images}}<li><img src="{{.}}" class="slide-img"></li>{{/place_images}}</ul>
        </div>

        <h3>Address: {{ place.address }}</h3>

        <h3>Phone Number: {{ place.phone }}</h3>
        <h3>Website: <a href="{{ place.website }}">{{ place.website }}</a></h3>

        <!-- give a 5 day weather forecast of the location // use for debugging purposes-->
        <!--
        <p>
            <h2>Today's weather:</h2>
            <br>Weather condition: {{ place_condition }}<img id="weatherIcon" src="http://openweathermap.org/img/w/{{place_icon}}.png"></br>
            <br>Current temperature: {{ place_temp }}°C</br>
            <br>Current wind speed: {{ place_wind_speed }} m/s</br>
            <br>Current time: {{ place_time }}</br>
        </p>-->

        <p> id is : {{place_id}} </p>


        <!-- new map goes here-->
        <br>


        <div class="col-lg-9">
            <div id="floating-panel">
                <input onclick="showShops();" type=button value="Shops">
                <input onclick="showPetrolStation();" type=button value="Service Station">
                <input onclick="showMeds();" type=button value="Medical Facilities">
            </div>
            <div id="map"></div>
            <br><br>
            <button type="button" class="btn btn-primary" onclick="goBack()">Go Back</button>
            <script> function goBack() { window.history.back();}</script>
        </div>
    </div>


    <script>
        //will clean up this later
        //global vars here

        var map;
        var mapLatLng = { lat: {{place_lat}}, lng: {{place_lng}} };

        //different array of markers
        var meds = [];
        var shops = [];
        var petrol = [];

        //google services kept global
        var service; 


        function initMap() {
            map = new google.maps.Map(document.getElementById('map'), {
            center: mapLatLng,
            zoom: 13,
            mapTypeControl: false
            });

            var marker = new google.maps.Marker({
                position: mapLatLng,
                map: map,
            });


            //some request here
            var medsRequest = {
                location: map.getCenter(),
                //max range
                radius: 5000,
                types: ['hospital']
            }

            var shopsRequest = {
                location: map.getCenter(),
                radius: 5000,
                types: ['grocery_or_supermarket']
            }

            var petrolRequest = {
                location: map.getCenter(),
                radius: 5000,
                types: ['gas_station']
            }


            //first request
            service = new google.maps.places.PlacesService(map);

            service.nearbySearch(medsRequest, function(results, status) {


                if (status === google.maps.places.PlacesServiceStatus.OK) {
                    for (var i = 0; i < results.length; i++) {


                        //var a = _.throttle(function(){createMarker(meds,results[i]);}, 1000);
                        //console.log(results[i]);
                        createMarker(meds,results[i]);
                        //a();
                    }
                }
            });

            //second request
            service.nearbySearch(shopsRequest, function(results, status) {
                if (status === google.maps.places.PlacesServiceStatus.OK) {
                    for (var i = 0; i < results.length; i++) {
                        //console.log(results[i]);
                        createMarker(shops, results[i]); 
                    }
                }
            });

            //third request
            service.nearbySearch(petrolRequest, function(results, status) {
                if (status === google.maps.places.PlacesServiceStatus.OK) {
                    for (var i = 0; i < results.length; i++) {
                        //console.log(results[i]);
                        createMarker(petrol, results[i]);
                    }
                }
            });

        }
        
        function createMarker (array, place){

            //if (place.)
            //debugging here
            //console.log(JSON.stringify(place));

            if (place.icon != "https://maps.gstatic.com/mapfiles/place_api/icons/gas_station-71.png" 
                || place.icon != "https://maps.gstatic.com/mapfiles/place_api/icons/doctor-71.png"
                || place.icon != "https://maps.gstatic.com/mapfiles/place_api/icons/shopping-71.png"){
                return;
            }
            //some location
            var location = place.geometry.location;
           //icons
            var icon = {
                url: place.icon,
                size: new google.maps.Size(71, 71),
                origin: new google.maps.Point(0, 0),
                anchor: new google.maps.Point(10, 34),
                scaledSize: new google.maps.Size(25, 25)
            };
            var marker = new google.maps.Marker({
                map: map,
                icon: icon,
                position: location
            });

            google.maps.event.addListener(marker, "click", function() {

                service.getDetails({placeId: place.place_id}, function(placeInfo, status) {
                    if (status == google.maps.places.PlacesServiceStatus.OK) {
                        var infowindow = new google.maps.InfoWindow({
                            content: '<p>'+placeInfo.name+'</p>'+ '<p>'+placeInfo.formatted_address+'</p>' + '<p>'+placeInfo.formatted_phone_number+'</p>'
                        });
                        infowindow.setOptions({pixelOffset: new google.maps.Size(-25, 0)})
                        infowindow.open(map, marker);
                    }else{
                        console.log("ran out of api call or unexpected error");
                    }
                });


            });
            array.push(marker);


        }

       // Sets the map on all markers in the array.
        function setMapOnAll(markers, map) {
           // console.log("showing markers");
            for (var i = 0; i < markers.length; i++) {
              markers[i].setMap(map);
            }
        }

        // Removes the markers from the map, but keeps them in the array.
        function clearMarkers(markers) {
            //console.log("clearing markers");
            setMapOnAll(markers, null);
        }

        function showShops (){
        //remove w.e. was last
        //then set onto map
            clearMarkers(petrol);
            clearMarkers(meds);
            clearMarkers(shops);
            setMapOnAll(shops, map);
        }

        function showPetrolStation(){
            clearMarkers(shops);
            clearMarkers(meds);
            clearMarkers(petrol);
            setMapOnAll(petrol, map);
        }

        function showMeds (){
            clearMarkers(shops);
            clearMarkers(petrol);
            clearMarkers(meds);
            setMapOnAll(meds, map);
        }

    </script>

    <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDydgd2jbeRErhSowqagqkqVqARAPUieAw&callback=initMap&libraries=places"
    async defer></script>

    <script>
        //give the page urls:
        document.getElementById('pageURL').href = document.URL;
        document.getElementById('fbshareURL').href = 'https://www.facebook.com/sharer/sharer.php?u='
        + document.URL + '%2F&amp;src=sdkpreparse';
    </script>
    {{> bottomJs }}
    <script src="/js/unslider.js"></script>
    <script>$(function() {
    $('.slider').unslider({
        infinite: true
    });
    })</script>

</body>

</html>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
